#!/usr/bin/env python3
"""
Command line interface to util.sync_structures
"""

import eee

import sys
import re
import inspect
import argparse

def main(argv=None):

    if argv is None:
        argv = sys.argv[1:]

    # Function we are wrapping 
    fcn = eee.structure.sync_structures

    # Get program name from the function name
    prog = re.sub("_","-",fcn.__name__)
    prog = f"eee-{prog}"

    # Get description from the docstring of the function
    description = dict(inspect.getmembers(fcn))["__doc__"]
    description = re.sub(":code:","",description)

    # Build parser
    parser = argparse.ArgumentParser(prog=prog,
                                     description=description,
                                     formatter_class=argparse.RawTextHelpFormatter)

    
    parser.add_argument("out_dir",
                        type=str,
                        help="output directory to store results")    

    parser.add_argument("structure_files",
                        type=str,
                        nargs="+",
                        help="pdb or cif files to process")

    parser.add_argument("--overwrite",
                        action="store_true",
                        dest="overwrite")

    parser.add_argument("--verbose",
                        action="store_true",
                        dest="verbose")

    parser.add_argument("--keep_temporary",
                        action="store_true",
                        dest="keep_temporary")


    args = parser.parse_args(argv)

    fcn(structure_files=args.structure_files,
        out_dir=args.out_dir,
        overwrite=args.overwrite,
        verbose=args.verbose,
        keep_temporary=args.keep_temporary)


if __name__ == "__main__":
    main()
